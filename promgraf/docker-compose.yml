#version: "3.8"
services:
     grafana:
         image: index.docker.io/grafana/grafana-enterprise:latest #enterprise is recommended version, with no license
         container_name: grafana
         restart: unless-stopped
         security_opt:
             - no-new-privileges:true
         user: 1000:1000
         environment:
             #changes values in /etc/grafana/grafana.ini
             #- GF_SECURITY_PROTOCOL=https
             GF_SERVER_PROTOCOL: https
             #- GF_SECURITY_DOMAIN=thehome.party
             GF_SERVER_DOMAIN: thehome.party
             #- GF_SECURITY_ROOT_URL=https://grafana.thehome.party:3000
             GF_SERVER_ROOT_URL: https://grafana.thehome.party
             #- GF_SECURITY_CERT_KEY=/etc/grafana/grafana.key
             #- GF_SECURITY_CERT_FILE=/etc/grafana/grafana.crt
             #- UID=1000
             #- GID=1000
             #- GF_INSTALL_PLUGINS=grafana-clock-panel
             GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /var/lib/grafana/dashboards/no_folder/loki_syslog_aio_overview.json
         ports:
             - '3000:3000'
         volumes:
             - /home/dave/promgraf/grafdata:/var/lib/grafana #path for data 
             - /home/dave/promgraf/config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
             - /home/dave/promgraf/config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
             - /home/dave/promgraf/config/grafana/dashboards:/var/lib/grafana/dashboards
         networks:
             - myNUCNetwork
     prometheus:
         image: index.docker.io/prom/prometheus:latest
         container_name: prometheus
         restart: unless-stopped
         user: 1000:1000
         security_opt:
             - no-new-privileges:true
         command:
             - --config.file=/etc/prometheus/prometheus.yml
             - --storage.tsdb.path=/prometheus
             - --web.enable-admin-api
             - --web.enable-lifecycle
         ports:
             - '9090:9090'
         volumes:
             - /home/dave/promgraf/config/prometheus.yml:/etc/prometheus/prometheus.yml
             - /home/dave/promgraf/promdata:/prometheus #added as container made a volume for "/prometheus"
         networks:
             - myNUCNetwork
     loki:
         image: index.docker.io/grafana/loki:latest
         container_name: loki
         restart: unless-stopped
         user: 1000:1000
         security_opt:
             - no-new-privileges
         command: -config.file=/etc/loki/loki-config.yml
         depends_on:
             - minio
         ports:
             - '3100:3100'
         volumes:
             - /home/dave/promgraf/config/loki-config-filesystem.yml:/etc/loki/loki-config.yml:ro
         networks:
             - myNUCNetwork
     minio:
         image: index.docker.io/minio/minio:latest
         container_name: minio
         restart: unless-stopped
         #user: 1000:1000
         security_opt:
             - no-new-privileges
         command: -c 'mkdir -p /data/loki && /usr/bin/docker-entrypoint.sh minio server /data'
         entrypoint: sh
         environment:
             MINIO_ROOT_USER: minio123
             MINIO_PROMETHEUS_AUTH_TYPE: public
             MINIO_ROOT_PASSWORD: minio456
         healthcheck:
             interval: 30s
             retries: 3
             test:
             - CMD
             - curl
             - -f
             - http://localhost:9000/minio/health/live
             timeout: 20s
         ports:
             - '9000:9000'
         volumes:
             - /home/dave/promgraf/miniodata:/data #added as container made a volume
         networks:
             - myNUCNetwork
     node-exporter:
         image: index.docker.io/prom/node-exporter:latest
         container_name: node-exporter
         restart: unless-stopped
         user: 1000:1000
         security_opt:
             - no-new-privileges
         command: --path.rootfs=/host
         pid: host
         ports:
             - '9100:9100'
         volumes:
             - /:/host:ro,rslave
         networks:
             - myNUCNetwork
     promtail:
         image: index.docker.io/grafana/promtail:latest
         container_name: promtail
         restart: unless-stopped
         user: 1000:1000
         security_opt:
             - no-new-privileges
         command: -config.file=/etc/promtail/promtail-config.yml
         ports:
             - '1514:1514'
             - '9080:9080'
         volumes:
             - /home/dave/promgraf/config/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
         networks:
             - myNUCNetwork
     syslog-ng:
         image: index.docker.io/balabit/syslog-ng:latest
         container_name: syslog-ng
         restart: unless-stopped
         #user: 1000:1000
         security_opt:
             - no-new-privileges
         command: -edv
         depends_on:
             - promtail
         ports:
             - '514:514/udp'
             - '601:601/tcp'
         volumes:
             - /home/dave/promgraf/config/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf:ro
         networks:
             - myNUCNetwork
networks:
     myNUCNetwork:
         name: myNUCNetwork
         external: true
